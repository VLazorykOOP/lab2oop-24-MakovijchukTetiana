#include <iostream>
#include <fstream>
#include <string>

using namespace std;

void Shifruvanna(char text[4][16], unsigned short Rez[64]) {
    unsigned short r;
    int i, j, b;
    
    for (int row = 0; row < 4; row++) {
        for (int pos = 0; pos < 16; pos++) {
            r = 0;
            char c = text[row][pos];
            // Молодша частина ASCII (біти 0-3)
            r |= (c & 0x0F);
            // Номер рядка (біти 4-5)
            r |= (row & 0x03) << 4;
            
            // Позиція в рядку (біти 6-9)
            r |= (pos & 0x0F) << 6;
            
            // Старша частина ASCII (біти 10-13)
            r |= ((c >> 4) & 0x0F) << 10;
            
            // Біт парності для полів 4-9 (рядок + позиція)
            b = 0;
            for (i = 4; i <= 9; i++) {
                if (r & (1 << i)) b ^= 1;
            }
            r |= b << 14;
            
            // Біт парності для ASCII коду (біти 0-13)
            b = 0;
            for (i = 0; i <= 13; i++) {
                if (r & (1 << i)) b ^= 1;
            }
            r |= b << 15;
            
            Rez[row * 16 + pos] = r;
        }
    }
}

int main() {
    char text[4][16] = {' '}; // Заповнюємо пробілами
    unsigned short Rez[64];
    
    // Читання з файлу
    ifstream inputFile("input.txt");
    if (!inputFile.is_open()) {
        cerr << "Помилка відкриття файлу!" << endl;
        return 1;
    }
    
    // Заповнення масиву (4 рядки по 16 символів)
    for (int i = 0; i < 4; i++) {
        string line;
        getline(inputFile, line);
        for (int j = 0; j < 16; j++) {
            text[i][j] = (j < line.size()) ? line[j] : ' ';
        }
    }
    inputFile.close();
    
    // Шифрування
    Shifruvanna(text, Rez);
    
    // Вивід у hex
    cout << "Зашифрований результат:" << endl;
    for (int i = 0; i < 64; i++) {
        cout << hex << Rez[i] << endl;
    }
    
    // Запис у бінарний файл
    ofstream outputFile("encrypted.bin", ios::binary);
    outputFile.write((char*)Rez, sizeof(Rez));
    outputFile.close();
    
    cout << "Результат записано у файл 'encrypted.bin'" << endl;
    
    return 0;
}
